criar server GOOGLE:
maio 07, 2024
 Arquivo index.html

<iframe id="demo" src="https://livrosaartedoespirito.blogspot.com/" width="100%" height="300"></iframe>



<script>

function updateIframe() {

    fetch('http://livrosaartedoespirito.blogspot.com/') // Substitua com a URL do seu servidor

    .then(response => {

        if (response.ok) {

            return response.text();

        }

        throw new Error('Erro ao atualizar iframe');

    })

    .then(data => {

        document.getElementById('demo').src = data;

    })

    .catch(error => {

        console.error(error);

    });

}



setInterval(updateIframe, 10000); // 10000 milissegundos = 10 segundos

</script>

--------------------------------------------------
Aquino .js

Para configurar um servidor que possa lidar com a solicitação do cliente e atualizar o conteúdo do iframe, você precisará seguir alguns passos básicos. Aqui está uma abordagem geral de como você pode configurar um servidor simples usando Node.js e Express:

Certifique-se de ter o Node.js instalado em seu sistema. Você pode baixá-lo em https://nodejs.org/.
Crie uma pasta para o seu projeto e navegue até ela no terminal.
Inicie um novo projeto Node.js executando npm init -y no terminal para criar um arquivo package.json.
Instale o Express, que é um framework web para Node.js, executando npm install express no terminal.
Crie um arquivo chamado server.js na sua pasta do projeto e adicione o seguinte código:
javascript

Copiar Código
const express = require('express');
const app = express();

app.get('/atualizar-iframe', (req, res) => {
    // Aqui você pode colocar a lógica para retornar a URL que deseja carregar no iframe
    res.send('https://sites.google.com/view/livros-mcegonha-espiritual/p%C3%A1gina-inicial');
});
const PORT = process.env.PORT || 3000;
app.listen(PORT, () => {
    console.log(`Servidor rodando na porta ${PORT}`);
});

No terminal, execute node server.js para iniciar o servidor.
Agora, seu servidor estará rodando e respondendo à solicitação do cliente em http://localhost:3000/atualizar-iframe.
Certifique-se de substituir a lógica dentro da rota /atualizar-iframe para retornar a URL que você deseja carregar no iframe. Você também pode hospedar seu servidor em um provedor de serviços em nuvem para que ele esteja acessível publicamente. Lembre-se de configurar o servidor adequadamente para lidar com solicitações de forma segura e eficiente.

----------------------------------------------

arquivo.json


{
  "devDependencies": {
    "electron": "^27.1.2",
    "electron-builder": "^24.9.1"
  },
  "name": "mcegonha",
  "version": "1.0.0",
  "main": "index.js",
  "dependencies": {
    "boolean": "^3.2.0",
    "buffer-crc32": "^0.2.13",
    "cacheable-lookup": "^5.0.4",
    "cacheable-request": "^7.0.4",
    "child_process": "^1.0.2",
    "clone-response": "^1.0.3",
    "debug": "^4.3.4",
    "decompress-response": "^6.0.0",
    "defer-to-connect": "^2.0.1",
    "define-data-property": "^1.1.1",
    "define-properties": "^1.2.1",
    "detect-node": "^2.1.0",
    "end-of-stream": "^1.4.4",
    "env-paths": "^2.2.1",
    "es6-error": "^4.1.1",
    "escape-string-regexp": "^4.0.0",
    "express": "^4.18.2",
    "extract-zip": "^2.0.1",
    "fd-slicer": "^1.1.0",
    "fs-extra": "^8.1.0",
    "function-bind": "^1.1.2",
    "get-intrinsic": "^1.2.2",
    "get-stream": "^5.2.0",
    "global-agent": "^3.0.0",
    "globalthis": "^1.0.3",
    "gopd": "^1.0.1",
    "got": "^11.8.6",
    "graceful-fs": "^4.2.11",
    "has-property-descriptors": "^1.0.1",
    "has-proto": "^1.0.1",
    "has-symbols": "^1.0.3",
    "hasown": "^2.0.0",
    "http-cache-semantics": "^4.1.1",
    "http2-wrapper": "^1.0.3",
    "json-buffer": "^3.0.1",
    "json-stringify-safe": "^5.0.1",
    "jsonfile": "^4.0.0",
    "keyv": "^4.5.4",
    "lowercase-keys": "^2.0.0",
    "lru-cache": "^6.0.0",
    "matcher": "^3.0.0",
    "mimic-response": "^1.0.1",
    "ms": "^2.1.2",
    "normalize-url": "^6.1.0",
    "object-keys": "^1.1.1",
    "once": "^1.4.0",
    "openai": "^4.38.5",
    "p-cancelable": "^2.1.1",
    "pend": "^1.2.0",
    "progress": "^2.0.3",
    "pump": "^3.0.0",
    "querystring": "^0.2.1",
    "quick-lru": "^5.1.1",
    "resolve-alpn": "^1.2.1",
    "responselike": "^2.0.1",
    "roarr": "^2.15.4",
    "semver": "^6.3.1",
    "semver-compare": "^1.0.0",
    "serialize-error": "^7.0.1",
    "sprintf-js": "^1.1.3",
    "sumchecker": "^3.0.1",
    "type-fest": "^0.13.1",
    "undici-types": "^5.26.5",
    "universalify": "^0.1.2",
    "wrappy": "^1.0.2",
    "yallist": "^4.0.0",
    "yauzl": "^2.10.0"
  },
  "scripts": {
    "test": "echo \"Error: no test specified\" && exit 1"
  },
  "keywords": [],
  "author": "",
  "license": "ISC",
  "description": ""
}



